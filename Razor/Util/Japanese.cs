using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace TryMVC.Util
{
    public class Japanese
    {
        // 全角转半角
        public static string Zen2Han(string zen)
        {
            string[] hankakuArray = new string[142] { "ｶﾞ", "ｷﾞ", "ｸﾞ", "ｹﾞ", "ｺﾞ", "ｻﾞ", "ｼﾞ", "ｽﾞ", "ｾﾞ", "ｿﾞ", "ﾀﾞ", "ﾁﾞ", "ﾂﾞ", "ﾃﾞ", "ﾄﾞ", "ﾊﾞ", "ﾊﾟ", "ﾋﾞ", "ﾋﾟ", "ﾌﾞ", "ﾌﾟ", "ﾍﾞ", "ﾍﾟ", "ﾎﾞ", "ﾎﾟ", "ｳﾞ", "ｱ", "ｱ", "ｱ", "ｲ", "ｲ", "ｲ", "ｳ", "ｳ", "ｳ", "ｴ", "ｴ", "ｴ", "ｵ", "ｵ", "ｵ", "ｶ", "ｷ", "ｸ", "ｹ", "ｺ", "ｻ", "ｼ", "ｽ", "ｾ", "ｿ", "ﾀ", "ﾁ", "ﾂ", "ﾂ", "ﾂ", "ﾃ", "ﾄ", "ﾅ", "ﾆ", "ﾇ", "ﾈ", "ﾉ", "ﾊ", "ﾋ", "ﾌ", "ﾍ", "ﾎ", "ﾏ", "ﾐ", "ﾑ", "ﾒ", "ﾓ", "ﾔ", "ﾔ", "ﾔ", "ﾕ", "ﾕ", "ﾕ", "ﾖ", "ﾖ", "ﾖ", "ﾗ", "ﾘ", "ﾙ", "ﾚ", "ﾛ", "ﾜ", "ｦ", "ﾝ", "`", "ﾞ", "ﾟ", "､", ".", "｢", "｣", "(", ")", "/", "-", " ", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "-", "-", "-", "\\" };
            string[] zenkakuArray = new string[142] { "ガ", "ギ", "グ", "ゲ", "ゴ", "ザ", "ジ", "ズ", "ゼ", "ゾ", "ダ", "ヂ", "ヅ", "デ", "ド", "バ", "パ", "ビ", "ピ", "ブ", "プ", "ベ", "ペ", "ボ", "ポ", "ヴ", "ァ", "ア", "ｧ", "ィ", "イ", "ｨ", "ゥ", "ウ", "ｩ", "ェ", "エ", "ｪ", "ォ", "オ", "ｫ", "カ", "キ", "ク", "ケ", "コ", "サ", "シ", "ス", "セ", "ソ", "タ", "チ", "ッ", "ｯ", "ツ", "テ", "ト", "ナ", "ニ", "ヌ", "ネ", "ノ", "ハ", "ヒ", "フ", "ヘ", "ホ", "マ", "ミ", "ム", "メ", "モ", "ャ", "ｬ", "ヤ", "ュ", "ｭ", "ユ", "ョ", "ｮ", "ヨ", "ラ", "リ", "ル", "レ", "ロ", "ワ", "ヲ", "ン", "｀", "゛", "゜", "、", "．", "「", "」", "（", "）", "／", "ー", " ", "１", "２", "３", "４", "５", "６", "７", "８", "９", "０", "Ａ", "Ｂ", "Ｃ", "Ｄ", "Ｅ", "Ｆ", "Ｇ", "Ｈ", "Ｉ", "Ｊ", "Ｋ", "Ｌ", "Ｍ", "Ｎ", "Ｏ", "Ｐ", "Ｑ", "Ｒ", "Ｓ", "Ｔ", "Ｕ", "Ｖ", "Ｗ", "Ｘ", "Ｙ", "Ｚ", "ｰ", "‐", "－", "￥" };

            Dictionary<string, string> zenHanDict = zenkakuArray.Zip(hankakuArray, (k, v) => new { k, v }).ToDictionary(a => a.k, a => a.v);

            string han = "";
            foreach(var c in zen)
            {
                han += zenHanDict.GetValueOrDefault(c+"", c+"");
            }
            return han;
        }
        // 按行取出假名
        public static string[] Gyo(string kana)
        {
            string[] kanas = new string[] { };
            switch (kana)
            {
                case "ア":
                    kanas = new string[] { "ア", "イ", "ウ", "エ", "オ" };
                    break;
                case "カ":
                    kanas = new string[] { "カ", "ガ", "キ", "ギ", "ク", "グ", "ケ", "ゲ", "コ",　"ゴ" };
                    break;
                case "サ":
                    kanas = new string[] { "サ", "ザ", "シ", "ジ", "ス", "ズ", "セ", "ゼ", "ソ", "ゾ" };
                    break;
                case "タ":
                    kanas = new string[] { "タ", "ダ", "チ", "ヂ", "ツ", "ヅ", "テ", "デ", "ト", "ド" };
                    break;
                case "ナ":
                    kanas = new string[] { "ナ", "ニ", "ヌ", "ネ", "ノ"};
                    break;
                case "ハ":
                    kanas = new string[] { "ハ", "パ", "バ", "ヒ", "ピ", "ビ", "フ", "プ", "ブ", "ヘ", "ペ", "ベ", "ホ", "ポ", "ボ" };
                    break;
                case "マ":
                    kanas = new string[] { "マ", "ミ", "ム", "メ", "モ" };
                    break;
                case "ヤ":
                    kanas = new string[] { "ヤ", "ユ", "ヨ" };
                    break;
                case "ラ":
                    kanas = new string[] { "ラ", "リ", "ル", "レ", "ロ" };
                    break;
                case "ワ":
                    kanas = new string[] { "ワ", "ヲ" };
                    break;
                case "ン":
                    kanas = new string[] { "ン" };
                    break;
            }
            return kanas;
        }
    }
}
